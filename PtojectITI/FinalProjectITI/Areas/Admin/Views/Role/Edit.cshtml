@model FinalProjectITI.ViewModel.EditRoleViewModel

@{
    ViewBag.Title = " Edit Role";
}
<h1>Edit Role</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
           <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-primary">Cancel</a>
            </div>
        </form>
    </div>
</div>


<div class="card">
    <div class="card-header">
        <h3>Users In This Role</h3>
    </div>
    <div class="card-body">

        @if (!Model.Users.Any())
        {
            <h5 class="card-title">None At The Moment!</h5>


        }
        else
        {
            foreach (var user in Model.Users)
            {
                <h5 class="card-title">@user</h5>
            }

        }

    </div>

    <div class="card-footer">
        <a asp-action="EditUserInRole" asp-route-roleId="@Model.Id" class="btn btn-primary" style="width:auto">Add or Remove Users</a>

    </div>

</div>



<div>
    <a class="btn btn-warning" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
